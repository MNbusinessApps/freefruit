version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: free_fruit_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: free_fruit
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: free_fruit_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - free_fruit_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: free_fruit_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - free_fruit_network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: free_fruit_backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: free_fruit
      DB_USER: postgres
      DB_PASSWORD: free_fruit_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PORT: 3000
      FRONTEND_URL: http://localhost:19006
      SPORTSDATA_API_KEY: your_api_key_here
      ENABLE_DAILY_REFRESH: true
      ENABLE_CACHE: true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/logs:/app/logs
    networks:
      - free_fruit_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web Application (Development)
  web:
    build:
      context: ./web
      dockerfile: Dockerfile.dev
    container_name: free_fruit_web
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      VITE_API_BASE_URL: http://localhost:3000/api
      NODE_ENV: development
    depends_on:
      - backend
    volumes:
      - ./web:/app
      - /app/node_modules
    networks:
      - free_fruit_network
    command: npm run dev -- --host 0.0.0.0

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: free_fruit_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - web
    networks:
      - free_fruit_network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  free_fruit_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Development override for faster local development
# Use: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
---
# docker-compose.dev.yml (for development)
version: '3.8'

services:
  postgres:
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"  # Different port to avoid conflicts

  redis:
    ports:
      - "6380:6379"  # Different port to avoid conflicts

  backend:
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      REDIS_HOST: redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev

  web:
    environment:
      VITE_API_BASE_URL: http://localhost:3000/api
    command: npm run dev

# Production override
# Use: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up
---
# docker-compose.prod.yml (for production)
version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: free_fruit
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    networks:
      - free_fruit_prod_network

  redis:
    image: redis:7-alpine
    restart: always
    volumes:
      - redis_prod_data:/data
    networks:
      - free_fruit_prod_network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    restart: always
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: free_fruit
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      PORT: 3000
      FRONTEND_URL: ${FRONTEND_URL}
      SPORTSDATA_API_KEY: ${SPORTSDATA_API_KEY}
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - free_fruit_prod_network

  web:
    build:
      context: ./web
      dockerfile: Dockerfile.prod
    restart: always
    environment:
      VITE_API_BASE_URL: ${BACKEND_URL}
    depends_on:
      - backend
    networks:
      - free_fruit_prod_network

volumes:
  postgres_prod_data:
    driver: local
  redis_prod_data:
    driver: local

networks:
  free_fruit_prod_network:
    driver: bridge